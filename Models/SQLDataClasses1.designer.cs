#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_Beta_ver2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="My_Website")]
	public partial class SQLDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcart_item(cart_item instance);
    partial void Updatecart_item(cart_item instance);
    partial void Deletecart_item(cart_item instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertChange_History(Change_History instance);
    partial void UpdateChange_History(Change_History instance);
    partial void DeleteChange_History(Change_History instance);
    partial void InsertChange_type(Change_type instance);
    partial void UpdateChange_type(Change_type instance);
    partial void DeleteChange_type(Change_type instance);
    partial void Insertchat_message(chat_message instance);
    partial void Updatechat_message(chat_message instance);
    partial void Deletechat_message(chat_message instance);
    partial void Insertchat_session(chat_session instance);
    partial void Updatechat_session(chat_session instance);
    partial void Deletechat_session(chat_session instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrders_item(Orders_item instance);
    partial void UpdateOrders_item(Orders_item instance);
    partial void DeleteOrders_item(Orders_item instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void Insertproduct_import(product_import instance);
    partial void Updateproduct_import(product_import instance);
    partial void Deleteproduct_import(product_import instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insertshopping_cart(shopping_cart instance);
    partial void Updateshopping_cart(shopping_cart instance);
    partial void Deleteshopping_cart(shopping_cart instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void InsertType_Product(Type_Product instance);
    partial void UpdateType_Product(Type_Product instance);
    partial void DeleteType_Product(Type_Product instance);
    partial void InsertUser_detail(User_detail instance);
    partial void UpdateUser_detail(User_detail instance);
    partial void DeleteUser_detail(User_detail instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public SQLDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cart_item> cart_items
		{
			get
			{
				return this.GetTable<cart_item>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<Change_History> Change_Histories
		{
			get
			{
				return this.GetTable<Change_History>();
			}
		}
		
		public System.Data.Linq.Table<Change_type> Change_types
		{
			get
			{
				return this.GetTable<Change_type>();
			}
		}
		
		public System.Data.Linq.Table<chat_message> chat_messages
		{
			get
			{
				return this.GetTable<chat_message>();
			}
		}
		
		public System.Data.Linq.Table<chat_session> chat_sessions
		{
			get
			{
				return this.GetTable<chat_session>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Orders_item> Orders_items
		{
			get
			{
				return this.GetTable<Orders_item>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<product_import> product_imports
		{
			get
			{
				return this.GetTable<product_import>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<shopping_cart> shopping_carts
		{
			get
			{
				return this.GetTable<shopping_cart>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<Type_Product> Type_Products
		{
			get
			{
				return this.GetTable<Type_Product>();
			}
		}
		
		public System.Data.Linq.Table<User_detail> User_details
		{
			get
			{
				return this.GetTable<User_detail>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart_item")]
	public partial class cart_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cart_item_ID;
		
		private int _cart_ID;
		
		private int _Product_ID;
		
		private System.Nullable<decimal> _Sale_Price;
		
		private System.Nullable<int> _quantity;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<shopping_cart> _shopping_cart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncart_item_IDChanging(int value);
    partial void Oncart_item_IDChanged();
    partial void Oncart_IDChanging(int value);
    partial void Oncart_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnSale_PriceChanging(System.Nullable<decimal> value);
    partial void OnSale_PriceChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public cart_item()
		{
			this._Product = default(EntityRef<Product>);
			this._shopping_cart = default(EntityRef<shopping_cart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_item_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cart_item_ID
		{
			get
			{
				return this._cart_item_ID;
			}
			set
			{
				if ((this._cart_item_ID != value))
				{
					this.Oncart_item_IDChanging(value);
					this.SendPropertyChanging();
					this._cart_item_ID = value;
					this.SendPropertyChanged("cart_item_ID");
					this.Oncart_item_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_ID", DbType="Int NOT NULL")]
		public int cart_ID
		{
			get
			{
				return this._cart_ID;
			}
			set
			{
				if ((this._cart_ID != value))
				{
					if (this._shopping_cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncart_IDChanging(value);
					this.SendPropertyChanging();
					this._cart_ID = value;
					this.SendPropertyChanged("cart_ID");
					this.Oncart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL")]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_cart_item", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.cart_items.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.cart_items.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shopping_cart_cart_item", Storage="_shopping_cart", ThisKey="cart_ID", OtherKey="cart_ID", IsForeignKey=true)]
		public shopping_cart shopping_cart
		{
			get
			{
				return this._shopping_cart.Entity;
			}
			set
			{
				shopping_cart previousValue = this._shopping_cart.Entity;
				if (((previousValue != value) 
							|| (this._shopping_cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shopping_cart.Entity = null;
						previousValue.cart_items.Remove(this);
					}
					this._shopping_cart.Entity = value;
					if ((value != null))
					{
						value.cart_items.Add(this);
						this._cart_ID = value.cart_ID;
					}
					else
					{
						this._cart_ID = default(int);
					}
					this.SendPropertyChanged("shopping_cart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherID;
		
		private string _Code;
		
		private string _Descriptions;
		
		private string _DiscountType;
		
		private decimal _DiscountValue;
		
		private System.Nullable<decimal> _MaxDiscountAmount;
		
		private System.Nullable<decimal> _MinOrderValue;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _Quantity;
		
		private int _QuantityUsed;
		
		private bool _IsActive;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(int value);
    partial void OnVoucherIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    partial void OnDiscountTypeChanging(string value);
    partial void OnDiscountTypeChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnMaxDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnMaxDiscountAmountChanged();
    partial void OnMinOrderValueChanging(System.Nullable<decimal> value);
    partial void OnMinOrderValueChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnQuantityUsedChanging(int value);
    partial void OnQuantityUsedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Voucher()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(255)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DiscountType
		{
			get
			{
				return this._DiscountType;
			}
			set
			{
				if ((this._DiscountType != value))
				{
					this.OnDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._DiscountType = value;
					this.SendPropertyChanged("DiscountType");
					this.OnDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDiscountAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxDiscountAmount
		{
			get
			{
				return this._MaxDiscountAmount;
			}
			set
			{
				if ((this._MaxDiscountAmount != value))
				{
					this.OnMaxDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._MaxDiscountAmount = value;
					this.SendPropertyChanged("MaxDiscountAmount");
					this.OnMaxDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOrderValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinOrderValue
		{
			get
			{
				return this._MinOrderValue;
			}
			set
			{
				if ((this._MinOrderValue != value))
				{
					this.OnMinOrderValueChanging(value);
					this.SendPropertyChanging();
					this._MinOrderValue = value;
					this.SendPropertyChanged("MinOrderValue");
					this.OnMinOrderValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityUsed", DbType="Int NOT NULL")]
		public int QuantityUsed
		{
			get
			{
				return this._QuantityUsed;
			}
			set
			{
				if ((this._QuantityUsed != value))
				{
					this.OnQuantityUsedChanging(value);
					this.SendPropertyChanging();
					this._QuantityUsed = value;
					this.SendPropertyChanged("QuantityUsed");
					this.OnQuantityUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Order", Storage="_Orders", ThisKey="VoucherID", OtherKey="VoucherID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Change_History")]
	public partial class Change_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _change_ID;
		
		private System.Nullable<int> _ChangeByUserID;
		
		private string _old_value;
		
		private string _new_value;
		
		private string _descriptions;
		
		private System.Nullable<System.DateTime> _date_change;
		
		private string _history_ID;
		
		private EntityRef<Change_type> _Change_type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchange_IDChanging(string value);
    partial void Onchange_IDChanged();
    partial void OnChangeByUserIDChanging(System.Nullable<int> value);
    partial void OnChangeByUserIDChanged();
    partial void Onold_valueChanging(string value);
    partial void Onold_valueChanged();
    partial void Onnew_valueChanging(string value);
    partial void Onnew_valueChanged();
    partial void OndescriptionsChanging(string value);
    partial void OndescriptionsChanged();
    partial void Ondate_changeChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_changeChanged();
    partial void Onhistory_IDChanging(string value);
    partial void Onhistory_IDChanged();
    #endregion
		
		public Change_History()
		{
			this._Change_type = default(EntityRef<Change_type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string change_ID
		{
			get
			{
				return this._change_ID;
			}
			set
			{
				if ((this._change_ID != value))
				{
					if (this._Change_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onchange_IDChanging(value);
					this.SendPropertyChanging();
					this._change_ID = value;
					this.SendPropertyChanged("change_ID");
					this.Onchange_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeByUserID", DbType="Int")]
		public System.Nullable<int> ChangeByUserID
		{
			get
			{
				return this._ChangeByUserID;
			}
			set
			{
				if ((this._ChangeByUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeByUserIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeByUserID = value;
					this.SendPropertyChanged("ChangeByUserID");
					this.OnChangeByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_value", DbType="NVarChar(50)")]
		public string old_value
		{
			get
			{
				return this._old_value;
			}
			set
			{
				if ((this._old_value != value))
				{
					this.Onold_valueChanging(value);
					this.SendPropertyChanging();
					this._old_value = value;
					this.SendPropertyChanged("old_value");
					this.Onold_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_value", DbType="NVarChar(50)")]
		public string new_value
		{
			get
			{
				return this._new_value;
			}
			set
			{
				if ((this._new_value != value))
				{
					this.Onnew_valueChanging(value);
					this.SendPropertyChanging();
					this._new_value = value;
					this.SendPropertyChanged("new_value");
					this.Onnew_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptions", DbType="NVarChar(255)")]
		public string descriptions
		{
			get
			{
				return this._descriptions;
			}
			set
			{
				if ((this._descriptions != value))
				{
					this.OndescriptionsChanging(value);
					this.SendPropertyChanging();
					this._descriptions = value;
					this.SendPropertyChanged("descriptions");
					this.OndescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_change", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_change
		{
			get
			{
				return this._date_change;
			}
			set
			{
				if ((this._date_change != value))
				{
					this.Ondate_changeChanging(value);
					this.SendPropertyChanging();
					this._date_change = value;
					this.SendPropertyChanged("date_change");
					this.Ondate_changeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_history_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string history_ID
		{
			get
			{
				return this._history_ID;
			}
			set
			{
				if ((this._history_ID != value))
				{
					this.Onhistory_IDChanging(value);
					this.SendPropertyChanging();
					this._history_ID = value;
					this.SendPropertyChanged("history_ID");
					this.Onhistory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Change_type_Change_History", Storage="_Change_type", ThisKey="change_ID", OtherKey="change_ID", IsForeignKey=true)]
		public Change_type Change_type
		{
			get
			{
				return this._Change_type.Entity;
			}
			set
			{
				Change_type previousValue = this._Change_type.Entity;
				if (((previousValue != value) 
							|| (this._Change_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Change_type.Entity = null;
						previousValue.Change_Histories.Remove(this);
					}
					this._Change_type.Entity = value;
					if ((value != null))
					{
						value.Change_Histories.Add(this);
						this._change_ID = value.change_ID;
					}
					else
					{
						this._change_ID = default(string);
					}
					this.SendPropertyChanged("Change_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Change_History", Storage="_User", ThisKey="ChangeByUserID", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Change_Histories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Change_Histories.Add(this);
						this._ChangeByUserID = value.ID_user;
					}
					else
					{
						this._ChangeByUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Change_type")]
	public partial class Change_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _change_ID;
		
		private string _change_name;
		
		private string _acction_type;
		
		private string _entity_type;
		
		private EntitySet<Change_History> _Change_Histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchange_IDChanging(string value);
    partial void Onchange_IDChanged();
    partial void Onchange_nameChanging(string value);
    partial void Onchange_nameChanged();
    partial void Onacction_typeChanging(string value);
    partial void Onacction_typeChanged();
    partial void Onentity_typeChanging(string value);
    partial void Onentity_typeChanged();
    #endregion
		
		public Change_type()
		{
			this._Change_Histories = new EntitySet<Change_History>(new Action<Change_History>(this.attach_Change_Histories), new Action<Change_History>(this.detach_Change_Histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string change_ID
		{
			get
			{
				return this._change_ID;
			}
			set
			{
				if ((this._change_ID != value))
				{
					this.Onchange_IDChanging(value);
					this.SendPropertyChanging();
					this._change_ID = value;
					this.SendPropertyChanged("change_ID");
					this.Onchange_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change_name", DbType="NVarChar(50)")]
		public string change_name
		{
			get
			{
				return this._change_name;
			}
			set
			{
				if ((this._change_name != value))
				{
					this.Onchange_nameChanging(value);
					this.SendPropertyChanging();
					this._change_name = value;
					this.SendPropertyChanged("change_name");
					this.Onchange_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acction_type", DbType="NVarChar(50)")]
		public string acction_type
		{
			get
			{
				return this._acction_type;
			}
			set
			{
				if ((this._acction_type != value))
				{
					this.Onacction_typeChanging(value);
					this.SendPropertyChanging();
					this._acction_type = value;
					this.SendPropertyChanged("acction_type");
					this.Onacction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entity_type", DbType="NVarChar(50)")]
		public string entity_type
		{
			get
			{
				return this._entity_type;
			}
			set
			{
				if ((this._entity_type != value))
				{
					this.Onentity_typeChanging(value);
					this.SendPropertyChanging();
					this._entity_type = value;
					this.SendPropertyChanged("entity_type");
					this.Onentity_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Change_type_Change_History", Storage="_Change_Histories", ThisKey="change_ID", OtherKey="change_ID")]
		public EntitySet<Change_History> Change_Histories
		{
			get
			{
				return this._Change_Histories;
			}
			set
			{
				this._Change_Histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Change_Histories(Change_History entity)
		{
			this.SendPropertyChanging();
			entity.Change_type = this;
		}
		
		private void detach_Change_Histories(Change_History entity)
		{
			this.SendPropertyChanging();
			entity.Change_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chat_messages")]
	public partial class chat_message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _ChatID;
		
		private System.Nullable<int> _SenderID;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _SentAt;
		
		private EntityRef<chat_session> _chat_session;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnChatIDChanging(string value);
    partial void OnChatIDChanged();
    partial void OnSenderIDChanging(System.Nullable<int> value);
    partial void OnSenderIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSentAtChanging(System.Nullable<System.DateTime> value);
    partial void OnSentAtChanged();
    #endregion
		
		public chat_message()
		{
			this._chat_session = default(EntityRef<chat_session>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ChatID
		{
			get
			{
				return this._ChatID;
			}
			set
			{
				if ((this._ChatID != value))
				{
					if (this._chat_session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatIDChanging(value);
					this.SendPropertyChanging();
					this._ChatID = value;
					this.SendPropertyChanged("ChatID");
					this.OnChatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int")]
		public System.Nullable<int> SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentAt
		{
			get
			{
				return this._SentAt;
			}
			set
			{
				if ((this._SentAt != value))
				{
					this.OnSentAtChanging(value);
					this.SendPropertyChanging();
					this._SentAt = value;
					this.SendPropertyChanged("SentAt");
					this.OnSentAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chat_session_chat_message", Storage="_chat_session", ThisKey="ChatID", OtherKey="ChatID", IsForeignKey=true)]
		public chat_session chat_session
		{
			get
			{
				return this._chat_session.Entity;
			}
			set
			{
				chat_session previousValue = this._chat_session.Entity;
				if (((previousValue != value) 
							|| (this._chat_session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._chat_session.Entity = null;
						previousValue.chat_messages.Remove(this);
					}
					this._chat_session.Entity = value;
					if ((value != null))
					{
						value.chat_messages.Add(this);
						this._ChatID = value.ChatID;
					}
					else
					{
						this._ChatID = default(string);
					}
					this.SendPropertyChanged("chat_session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_message", Storage="_User", ThisKey="SenderID", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.chat_messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.chat_messages.Add(this);
						this._SenderID = value.ID_user;
					}
					else
					{
						this._SenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chat_session")]
	public partial class chat_session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ChatID;
		
		private System.Nullable<int> _ID_user;
		
		private System.Nullable<int> _SupportID;
		
		private System.Nullable<System.DateTime> _Date_Create;
		
		private string _Chat_Status;
		
		private EntitySet<chat_message> _chat_messages;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatIDChanging(string value);
    partial void OnChatIDChanged();
    partial void OnID_userChanging(System.Nullable<int> value);
    partial void OnID_userChanged();
    partial void OnSupportIDChanging(System.Nullable<int> value);
    partial void OnSupportIDChanged();
    partial void OnDate_CreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_CreateChanged();
    partial void OnChat_StatusChanging(string value);
    partial void OnChat_StatusChanged();
    #endregion
		
		public chat_session()
		{
			this._chat_messages = new EntitySet<chat_message>(new Action<chat_message>(this.attach_chat_messages), new Action<chat_message>(this.detach_chat_messages));
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ChatID
		{
			get
			{
				return this._ChatID;
			}
			set
			{
				if ((this._ChatID != value))
				{
					this.OnChatIDChanging(value);
					this.SendPropertyChanging();
					this._ChatID = value;
					this.SendPropertyChanged("ChatID");
					this.OnChatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", DbType="Int")]
		public System.Nullable<int> ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportID", DbType="Int")]
		public System.Nullable<int> SupportID
		{
			get
			{
				return this._SupportID;
			}
			set
			{
				if ((this._SupportID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupportIDChanging(value);
					this.SendPropertyChanging();
					this._SupportID = value;
					this.SendPropertyChanged("SupportID");
					this.OnSupportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Create", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Create
		{
			get
			{
				return this._Date_Create;
			}
			set
			{
				if ((this._Date_Create != value))
				{
					this.OnDate_CreateChanging(value);
					this.SendPropertyChanging();
					this._Date_Create = value;
					this.SendPropertyChanged("Date_Create");
					this.OnDate_CreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chat_Status", DbType="NVarChar(50)")]
		public string Chat_Status
		{
			get
			{
				return this._Chat_Status;
			}
			set
			{
				if ((this._Chat_Status != value))
				{
					this.OnChat_StatusChanging(value);
					this.SendPropertyChanging();
					this._Chat_Status = value;
					this.SendPropertyChanged("Chat_Status");
					this.OnChat_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chat_session_chat_message", Storage="_chat_messages", ThisKey="ChatID", OtherKey="ChatID")]
		public EntitySet<chat_message> chat_messages
		{
			get
			{
				return this._chat_messages;
			}
			set
			{
				this._chat_messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_session", Storage="_User", ThisKey="SupportID", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.chat_sessions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.chat_sessions.Add(this);
						this._SupportID = value.ID_user;
					}
					else
					{
						this._SupportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_session1", Storage="_User1", ThisKey="ID_user", OtherKey="ID_user", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.chat_sessions1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.chat_sessions1.Add(this);
						this._ID_user = value.ID_user;
					}
					else
					{
						this._ID_user = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chat_messages(chat_message entity)
		{
			this.SendPropertyChanging();
			entity.chat_session = this;
		}
		
		private void detach_chat_messages(chat_message entity)
		{
			this.SendPropertyChanging();
			entity.chat_session = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Order_ID;
		
		private System.Nullable<int> _ID_user;
		
		private System.Nullable<int> _VoucherID;
		
		private System.Nullable<System.DateTime> _Order_Date;
		
		private int _StatusID;
		
		private System.Nullable<decimal> _Total_Amount;
		
		private EntitySet<Orders_item> _Orders_items;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_IDChanging(string value);
    partial void OnOrder_IDChanged();
    partial void OnID_userChanging(System.Nullable<int> value);
    partial void OnID_userChanged();
    partial void OnVoucherIDChanging(System.Nullable<int> value);
    partial void OnVoucherIDChanged();
    partial void OnOrder_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_DateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnTotal_AmountChanging(System.Nullable<decimal> value);
    partial void OnTotal_AmountChanged();
    #endregion
		
		public Order()
		{
			this._Orders_items = new EntitySet<Orders_item>(new Action<Orders_item>(this.attach_Orders_items), new Action<Orders_item>(this.detach_Orders_items));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Voucher = default(EntityRef<Voucher>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", DbType="Int")]
		public System.Nullable<int> ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="Int")]
		public System.Nullable<int> VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Order_Date
		{
			get
			{
				return this._Order_Date;
			}
			set
			{
				if ((this._Order_Date != value))
				{
					this.OnOrder_DateChanging(value);
					this.SendPropertyChanging();
					this._Order_Date = value;
					this.SendPropertyChanged("Order_Date");
					this.OnOrder_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Total_Amount
		{
			get
			{
				return this._Total_Amount;
			}
			set
			{
				if ((this._Total_Amount != value))
				{
					this.OnTotal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount = value;
					this.SendPropertyChanged("Total_Amount");
					this.OnTotal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Orders_item", Storage="_Orders_items", ThisKey="Order_ID", OtherKey="Order_ID")]
		public EntitySet<Orders_item> Orders_items
		{
			get
			{
				return this._Orders_items;
			}
			set
			{
				this._Orders_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Payments", ThisKey="Order_ID", OtherKey="Order_ID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Order", Storage="_Voucher", ThisKey="VoucherID", OtherKey="VoucherID", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._VoucherID = value.VoucherID;
					}
					else
					{
						this._VoucherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="ID_user", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ID_user = value.ID_user;
					}
					else
					{
						this._ID_user = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders_items(Orders_item entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Orders_items(Orders_item entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders_item")]
	public partial class Orders_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Order_item_ID;
		
		private string _Order_ID;
		
		private System.Nullable<int> _Product_ID;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _Sale_Price;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_item_IDChanging(string value);
    partial void OnOrder_item_IDChanged();
    partial void OnOrder_IDChanging(string value);
    partial void OnOrder_IDChanged();
    partial void OnProduct_IDChanging(System.Nullable<int> value);
    partial void OnProduct_IDChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnSale_PriceChanging(System.Nullable<decimal> value);
    partial void OnSale_PriceChanged();
    #endregion
		
		public Orders_item()
		{
			this._Order = default(EntityRef<Order>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_item_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Order_item_ID
		{
			get
			{
				return this._Order_item_ID;
			}
			set
			{
				if ((this._Order_item_ID != value))
				{
					this.OnOrder_item_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_item_ID = value;
					this.SendPropertyChanged("Order_item_ID");
					this.OnOrder_item_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int")]
		public System.Nullable<int> Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Orders_item", Storage="_Order", ThisKey="Order_ID", OtherKey="Order_ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Orders_items.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Orders_items.Add(this);
						this._Order_ID = value.Order_ID;
					}
					else
					{
						this._Order_ID = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Orders_item", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Orders_items.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Orders_items.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Descriptions;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(255)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_Orders", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PaymentID;
		
		private System.Nullable<int> _cart_ID;
		
		private string _Order_ID;
		
		private string _Payment_Method;
		
		private string _Payment_Status;
		
		private System.Nullable<System.DateTime> _Payment_Date;
		
		private decimal _Amount;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<shopping_cart> _shopping_cart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(string value);
    partial void OnPaymentIDChanged();
    partial void Oncart_IDChanging(System.Nullable<int> value);
    partial void Oncart_IDChanged();
    partial void OnOrder_IDChanging(string value);
    partial void OnOrder_IDChanged();
    partial void OnPayment_MethodChanging(string value);
    partial void OnPayment_MethodChanged();
    partial void OnPayment_StatusChanging(string value);
    partial void OnPayment_StatusChanged();
    partial void OnPayment_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPayment_DateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public Payment()
		{
			this._Order = default(EntityRef<Order>);
			this._shopping_cart = default(EntityRef<shopping_cart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_ID", DbType="Int")]
		public System.Nullable<int> cart_ID
		{
			get
			{
				return this._cart_ID;
			}
			set
			{
				if ((this._cart_ID != value))
				{
					if (this._shopping_cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncart_IDChanging(value);
					this.SendPropertyChanging();
					this._cart_ID = value;
					this.SendPropertyChanged("cart_ID");
					this.Oncart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Method", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Payment_Method
		{
			get
			{
				return this._Payment_Method;
			}
			set
			{
				if ((this._Payment_Method != value))
				{
					this.OnPayment_MethodChanging(value);
					this.SendPropertyChanging();
					this._Payment_Method = value;
					this.SendPropertyChanged("Payment_Method");
					this.OnPayment_MethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Status", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Payment_Status
		{
			get
			{
				return this._Payment_Status;
			}
			set
			{
				if ((this._Payment_Status != value))
				{
					this.OnPayment_StatusChanging(value);
					this.SendPropertyChanging();
					this._Payment_Status = value;
					this.SendPropertyChanged("Payment_Status");
					this.OnPayment_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Payment_Date
		{
			get
			{
				return this._Payment_Date;
			}
			set
			{
				if ((this._Payment_Date != value))
				{
					this.OnPayment_DateChanging(value);
					this.SendPropertyChanging();
					this._Payment_Date = value;
					this.SendPropertyChanged("Payment_Date");
					this.OnPayment_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Order", ThisKey="Order_ID", OtherKey="Order_ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Order_ID = value.Order_ID;
					}
					else
					{
						this._Order_ID = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shopping_cart_Payment", Storage="_shopping_cart", ThisKey="cart_ID", OtherKey="cart_ID", IsForeignKey=true)]
		public shopping_cart shopping_cart
		{
			get
			{
				return this._shopping_cart.Entity;
			}
			set
			{
				shopping_cart previousValue = this._shopping_cart.Entity;
				if (((previousValue != value) 
							|| (this._shopping_cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shopping_cart.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._shopping_cart.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._cart_ID = value.cart_ID;
					}
					else
					{
						this._cart_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("shopping_cart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_imports")]
	public partial class product_import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _import_id;
		
		private string _supplier_id;
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<int> _ID_user;
		
		private System.Nullable<System.DateTime> _import_date;
		
		private int _quantity;
		
		private decimal _import_price;
		
		private System.Nullable<decimal> _total_amount;
		
		private string _status;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<supplier> _supplier;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimport_idChanging(int value);
    partial void Onimport_idChanged();
    partial void Onsupplier_idChanging(string value);
    partial void Onsupplier_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void OnID_userChanging(System.Nullable<int> value);
    partial void OnID_userChanged();
    partial void Onimport_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onimport_dateChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Onimport_priceChanging(decimal value);
    partial void Onimport_priceChanged();
    partial void Ontotal_amountChanging(System.Nullable<decimal> value);
    partial void Ontotal_amountChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public product_import()
		{
			this._Product = default(EntityRef<Product>);
			this._supplier = default(EntityRef<supplier>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_import_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int import_id
		{
			get
			{
				return this._import_id;
			}
			set
			{
				if ((this._import_id != value))
				{
					this.Onimport_idChanging(value);
					this.SendPropertyChanging();
					this._import_id = value;
					this.SendPropertyChanged("import_id");
					this.Onimport_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", DbType="Int")]
		public System.Nullable<int> ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_import_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> import_date
		{
			get
			{
				return this._import_date;
			}
			set
			{
				if ((this._import_date != value))
				{
					this.Onimport_dateChanging(value);
					this.SendPropertyChanging();
					this._import_date = value;
					this.SendPropertyChanged("import_date");
					this.Onimport_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_import_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal import_price
		{
			get
			{
				return this._import_price;
			}
			set
			{
				if ((this._import_price != value))
				{
					this.Onimport_priceChanging(value);
					this.SendPropertyChanging();
					this._import_price = value;
					this.SendPropertyChanged("import_price");
					this.Onimport_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", AutoSync=AutoSync.Always, DbType="Decimal(29,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_product_import", Storage="_Product", ThisKey="product_id", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.product_imports.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.product_imports.Add(this);
						this._product_id = value.Product_ID;
					}
					else
					{
						this._product_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_product_import", Storage="_supplier", ThisKey="supplier_id", OtherKey="supplier_ID", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.product_imports.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.product_imports.Add(this);
						this._supplier_id = value.supplier_ID;
					}
					else
					{
						this._supplier_id = default(string);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_product_import", Storage="_User", ThisKey="ID_user", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.product_imports.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.product_imports.Add(this);
						this._ID_user = value.ID_user;
					}
					else
					{
						this._ID_user = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_ID;
		
		private string _Product_name;
		
		private string _Type_Product_ID;
		
		private string _Descriptions;
		
		private int _Current_Quantity;
		
		private System.Nullable<decimal> _Sale_Price;
		
		private string _Product_Image;
		
		private string _supplier_ID;
		
		private string _Product_Status;
		
		private EntitySet<cart_item> _cart_items;
		
		private EntitySet<Orders_item> _Orders_items;
		
		private EntitySet<product_import> _product_imports;
		
		private EntityRef<supplier> _supplier;
		
		private EntityRef<Type_Product> _Type_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnProduct_nameChanging(string value);
    partial void OnProduct_nameChanged();
    partial void OnType_Product_IDChanging(string value);
    partial void OnType_Product_IDChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    partial void OnCurrent_QuantityChanging(int value);
    partial void OnCurrent_QuantityChanged();
    partial void OnSale_PriceChanging(System.Nullable<decimal> value);
    partial void OnSale_PriceChanged();
    partial void OnProduct_ImageChanging(string value);
    partial void OnProduct_ImageChanged();
    partial void Onsupplier_IDChanging(string value);
    partial void Onsupplier_IDChanged();
    partial void OnProduct_StatusChanging(string value);
    partial void OnProduct_StatusChanged();
    #endregion
		
		public Product()
		{
			this._cart_items = new EntitySet<cart_item>(new Action<cart_item>(this.attach_cart_items), new Action<cart_item>(this.detach_cart_items));
			this._Orders_items = new EntitySet<Orders_item>(new Action<Orders_item>(this.attach_Orders_items), new Action<Orders_item>(this.detach_Orders_items));
			this._product_imports = new EntitySet<product_import>(new Action<product_import>(this.attach_product_imports), new Action<product_import>(this.detach_product_imports));
			this._supplier = default(EntityRef<supplier>);
			this._Type_Product = default(EntityRef<Type_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_name", DbType="NVarChar(200)")]
		public string Product_name
		{
			get
			{
				return this._Product_name;
			}
			set
			{
				if ((this._Product_name != value))
				{
					this.OnProduct_nameChanging(value);
					this.SendPropertyChanging();
					this._Product_name = value;
					this.SendPropertyChanged("Product_name");
					this.OnProduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Type_Product_ID
		{
			get
			{
				return this._Type_Product_ID;
			}
			set
			{
				if ((this._Type_Product_ID != value))
				{
					if (this._Type_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnType_Product_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_Product_ID = value;
					this.SendPropertyChanged("Type_Product_ID");
					this.OnType_Product_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(255)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Quantity", DbType="Int NOT NULL")]
		public int Current_Quantity
		{
			get
			{
				return this._Current_Quantity;
			}
			set
			{
				if ((this._Current_Quantity != value))
				{
					this.OnCurrent_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Current_Quantity = value;
					this.SendPropertyChanged("Current_Quantity");
					this.OnCurrent_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Image", DbType="VarChar(255)")]
		public string Product_Image
		{
			get
			{
				return this._Product_Image;
			}
			set
			{
				if ((this._Product_Image != value))
				{
					this.OnProduct_ImageChanging(value);
					this.SendPropertyChanging();
					this._Product_Image = value;
					this.SendPropertyChanged("Product_Image");
					this.OnProduct_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string supplier_ID
		{
			get
			{
				return this._supplier_ID;
			}
			set
			{
				if ((this._supplier_ID != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_IDChanging(value);
					this.SendPropertyChanging();
					this._supplier_ID = value;
					this.SendPropertyChanged("supplier_ID");
					this.Onsupplier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Status", DbType="NVarChar(20)")]
		public string Product_Status
		{
			get
			{
				return this._Product_Status;
			}
			set
			{
				if ((this._Product_Status != value))
				{
					this.OnProduct_StatusChanging(value);
					this.SendPropertyChanging();
					this._Product_Status = value;
					this.SendPropertyChanged("Product_Status");
					this.OnProduct_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_cart_item", Storage="_cart_items", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<cart_item> cart_items
		{
			get
			{
				return this._cart_items;
			}
			set
			{
				this._cart_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Orders_item", Storage="_Orders_items", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Orders_item> Orders_items
		{
			get
			{
				return this._Orders_items;
			}
			set
			{
				this._Orders_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_product_import", Storage="_product_imports", ThisKey="Product_ID", OtherKey="product_id")]
		public EntitySet<product_import> product_imports
		{
			get
			{
				return this._product_imports;
			}
			set
			{
				this._product_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_Product", Storage="_supplier", ThisKey="supplier_ID", OtherKey="supplier_ID", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._supplier_ID = value.supplier_ID;
					}
					else
					{
						this._supplier_ID = default(string);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product_Product", Storage="_Type_Product", ThisKey="Type_Product_ID", OtherKey="Type_Product_ID", IsForeignKey=true)]
		public Type_Product Type_Product
		{
			get
			{
				return this._Type_Product.Entity;
			}
			set
			{
				Type_Product previousValue = this._Type_Product.Entity;
				if (((previousValue != value) 
							|| (this._Type_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type_Product.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Type_Product.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Type_Product_ID = value.Type_Product_ID;
					}
					else
					{
						this._Type_Product_ID = default(string);
					}
					this.SendPropertyChanged("Type_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cart_items(cart_item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_cart_items(cart_item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Orders_items(Orders_item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Orders_items(Orders_item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shopping_cart")]
	public partial class shopping_cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cart_ID;
		
		private int _ID_user;
		
		private System.Nullable<System.DateTime> _day_create;
		
		private System.Nullable<System.DateTime> _update_at;
		
		private EntitySet<cart_item> _cart_items;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncart_IDChanging(int value);
    partial void Oncart_IDChanged();
    partial void OnID_userChanging(int value);
    partial void OnID_userChanged();
    partial void Onday_createChanging(System.Nullable<System.DateTime> value);
    partial void Onday_createChanged();
    partial void Onupdate_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_atChanged();
    #endregion
		
		public shopping_cart()
		{
			this._cart_items = new EntitySet<cart_item>(new Action<cart_item>(this.attach_cart_items), new Action<cart_item>(this.detach_cart_items));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cart_ID
		{
			get
			{
				return this._cart_ID;
			}
			set
			{
				if ((this._cart_ID != value))
				{
					this.Oncart_IDChanging(value);
					this.SendPropertyChanging();
					this._cart_ID = value;
					this.SendPropertyChanged("cart_ID");
					this.Oncart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", DbType="Int NOT NULL")]
		public int ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> day_create
		{
			get
			{
				return this._day_create;
			}
			set
			{
				if ((this._day_create != value))
				{
					this.Onday_createChanging(value);
					this.SendPropertyChanging();
					this._day_create = value;
					this.SendPropertyChanged("day_create");
					this.Onday_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_at
		{
			get
			{
				return this._update_at;
			}
			set
			{
				if ((this._update_at != value))
				{
					this.Onupdate_atChanging(value);
					this.SendPropertyChanging();
					this._update_at = value;
					this.SendPropertyChanged("update_at");
					this.Onupdate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shopping_cart_cart_item", Storage="_cart_items", ThisKey="cart_ID", OtherKey="cart_ID")]
		public EntitySet<cart_item> cart_items
		{
			get
			{
				return this._cart_items;
			}
			set
			{
				this._cart_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shopping_cart_Payment", Storage="_Payments", ThisKey="cart_ID", OtherKey="cart_ID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_shopping_cart", Storage="_User", ThisKey="ID_user", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.shopping_carts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.shopping_carts.Add(this);
						this._ID_user = value.ID_user;
					}
					else
					{
						this._ID_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cart_items(cart_item entity)
		{
			this.SendPropertyChanging();
			entity.shopping_cart = this;
		}
		
		private void detach_cart_items(cart_item entity)
		{
			this.SendPropertyChanging();
			entity.shopping_cart = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.shopping_cart = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.shopping_cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supplier")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _supplier_ID;
		
		private string _supplier_name;
		
		private string _email;
		
		private string _Phone_Number;
		
		private string _supplier_address;
		
		private EntitySet<product_import> _product_imports;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupplier_IDChanging(string value);
    partial void Onsupplier_IDChanged();
    partial void Onsupplier_nameChanging(string value);
    partial void Onsupplier_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void Onsupplier_addressChanging(string value);
    partial void Onsupplier_addressChanged();
    #endregion
		
		public supplier()
		{
			this._product_imports = new EntitySet<product_import>(new Action<product_import>(this.attach_product_imports), new Action<product_import>(this.detach_product_imports));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string supplier_ID
		{
			get
			{
				return this._supplier_ID;
			}
			set
			{
				if ((this._supplier_ID != value))
				{
					this.Onsupplier_IDChanging(value);
					this.SendPropertyChanging();
					this._supplier_ID = value;
					this.SendPropertyChanged("supplier_ID");
					this.Onsupplier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_name", DbType="NVarChar(50)")]
		public string supplier_name
		{
			get
			{
				return this._supplier_name;
			}
			set
			{
				if ((this._supplier_name != value))
				{
					this.Onsupplier_nameChanging(value);
					this.SendPropertyChanging();
					this._supplier_name = value;
					this.SendPropertyChanged("supplier_name");
					this.Onsupplier_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="VarChar(11)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_address", DbType="NVarChar(50)")]
		public string supplier_address
		{
			get
			{
				return this._supplier_address;
			}
			set
			{
				if ((this._supplier_address != value))
				{
					this.Onsupplier_addressChanging(value);
					this.SendPropertyChanging();
					this._supplier_address = value;
					this.SendPropertyChanged("supplier_address");
					this.Onsupplier_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_product_import", Storage="_product_imports", ThisKey="supplier_ID", OtherKey="supplier_id")]
		public EntitySet<product_import> product_imports
		{
			get
			{
				return this._product_imports;
			}
			set
			{
				this._product_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_Product", Storage="_Products", ThisKey="supplier_ID", OtherKey="supplier_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type_Product")]
	public partial class Type_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Type_Product_ID;
		
		private string _Type_Product_name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_Product_IDChanging(string value);
    partial void OnType_Product_IDChanged();
    partial void OnType_Product_nameChanging(string value);
    partial void OnType_Product_nameChanged();
    #endregion
		
		public Type_Product()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type_Product_ID
		{
			get
			{
				return this._Type_Product_ID;
			}
			set
			{
				if ((this._Type_Product_ID != value))
				{
					this.OnType_Product_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_Product_ID = value;
					this.SendPropertyChanged("Type_Product_ID");
					this.OnType_Product_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Product_name", DbType="NVarChar(50)")]
		public string Type_Product_name
		{
			get
			{
				return this._Type_Product_name;
			}
			set
			{
				if ((this._Type_Product_name != value))
				{
					this.OnType_Product_nameChanging(value);
					this.SendPropertyChanging();
					this._Type_Product_name = value;
					this.SendPropertyChanged("Type_Product_name");
					this.OnType_Product_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product_Product", Storage="_Products", ThisKey="Type_Product_ID", OtherKey="Type_Product_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type_Product = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type_Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_detail")]
	public partial class User_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_user;
		
		private string _user_phone_number;
		
		private string _full_name;
		
		private string _user_address;
		
		private string _user_pic;
		
		private System.Nullable<System.DateTime> _last_change;
		
		private System.Nullable<System.DateTime> _date_create;
		
		private System.Nullable<bool> _user_status;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_userChanging(int value);
    partial void OnID_userChanged();
    partial void Onuser_phone_numberChanging(string value);
    partial void Onuser_phone_numberChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void Onuser_addressChanging(string value);
    partial void Onuser_addressChanged();
    partial void Onuser_picChanging(string value);
    partial void Onuser_picChanged();
    partial void Onlast_changeChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_changeChanged();
    partial void Ondate_createChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createChanged();
    partial void Onuser_statusChanging(System.Nullable<bool> value);
    partial void Onuser_statusChanged();
    #endregion
		
		public User_detail()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_phone_number", DbType="VarChar(15)")]
		public string user_phone_number
		{
			get
			{
				return this._user_phone_number;
			}
			set
			{
				if ((this._user_phone_number != value))
				{
					this.Onuser_phone_numberChanging(value);
					this.SendPropertyChanging();
					this._user_phone_number = value;
					this.SendPropertyChanged("user_phone_number");
					this.Onuser_phone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(50)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_address", DbType="NVarChar(50)")]
		public string user_address
		{
			get
			{
				return this._user_address;
			}
			set
			{
				if ((this._user_address != value))
				{
					this.Onuser_addressChanging(value);
					this.SendPropertyChanging();
					this._user_address = value;
					this.SendPropertyChanged("user_address");
					this.Onuser_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pic", DbType="VarChar(50)")]
		public string user_pic
		{
			get
			{
				return this._user_pic;
			}
			set
			{
				if ((this._user_pic != value))
				{
					this.Onuser_picChanging(value);
					this.SendPropertyChanging();
					this._user_pic = value;
					this.SendPropertyChanged("user_pic");
					this.Onuser_picChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_change", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_change
		{
			get
			{
				return this._last_change;
			}
			set
			{
				if ((this._last_change != value))
				{
					this.Onlast_changeChanging(value);
					this.SendPropertyChanging();
					this._last_change = value;
					this.SendPropertyChanged("last_change");
					this.Onlast_changeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_create
		{
			get
			{
				return this._date_create;
			}
			set
			{
				if ((this._date_create != value))
				{
					this.Ondate_createChanging(value);
					this.SendPropertyChanging();
					this._date_create = value;
					this.SendPropertyChanged("date_create");
					this.Ondate_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_status", DbType="Bit")]
		public System.Nullable<bool> user_status
		{
			get
			{
				return this._user_status;
			}
			set
			{
				if ((this._user_status != value))
				{
					this.Onuser_statusChanging(value);
					this.SendPropertyChanging();
					this._user_status = value;
					this.SendPropertyChanged("user_status");
					this.Onuser_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_detail", Storage="_User", ThisKey="ID_user", OtherKey="ID_user", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_detail = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_detail = this;
						this._ID_user = value.ID_user;
					}
					else
					{
						this._ID_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_user;
		
		private string _users_name;
		
		private string _user_email;
		
		private string _user_password;
		
		private string _user_type;
		
		private EntitySet<Change_History> _Change_Histories;
		
		private EntitySet<chat_message> _chat_messages;
		
		private EntitySet<chat_session> _chat_sessions;
		
		private EntitySet<chat_session> _chat_sessions1;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<product_import> _product_imports;
		
		private EntitySet<shopping_cart> _shopping_carts;
		
		private EntityRef<User_detail> _User_detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_userChanging(int value);
    partial void OnID_userChanged();
    partial void Onusers_nameChanging(string value);
    partial void Onusers_nameChanged();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onuser_typeChanging(string value);
    partial void Onuser_typeChanged();
    #endregion
		
		public User()
		{
			this._Change_Histories = new EntitySet<Change_History>(new Action<Change_History>(this.attach_Change_Histories), new Action<Change_History>(this.detach_Change_Histories));
			this._chat_messages = new EntitySet<chat_message>(new Action<chat_message>(this.attach_chat_messages), new Action<chat_message>(this.detach_chat_messages));
			this._chat_sessions = new EntitySet<chat_session>(new Action<chat_session>(this.attach_chat_sessions), new Action<chat_session>(this.detach_chat_sessions));
			this._chat_sessions1 = new EntitySet<chat_session>(new Action<chat_session>(this.attach_chat_sessions1), new Action<chat_session>(this.detach_chat_sessions1));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._product_imports = new EntitySet<product_import>(new Action<product_import>(this.attach_product_imports), new Action<product_import>(this.detach_product_imports));
			this._shopping_carts = new EntitySet<shopping_cart>(new Action<shopping_cart>(this.attach_shopping_carts), new Action<shopping_cart>(this.detach_shopping_carts));
			this._User_detail = default(EntityRef<User_detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_user
		{
			get
			{
				return this._ID_user;
			}
			set
			{
				if ((this._ID_user != value))
				{
					this.OnID_userChanging(value);
					this.SendPropertyChanging();
					this._ID_user = value;
					this.SendPropertyChanged("ID_user");
					this.OnID_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_name", DbType="VarChar(20)")]
		public string users_name
		{
			get
			{
				return this._users_name;
			}
			set
			{
				if ((this._users_name != value))
				{
					this.Onusers_nameChanging(value);
					this.SendPropertyChanging();
					this._users_name = value;
					this.SendPropertyChanged("users_name");
					this.Onusers_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string user_email
		{
			get
			{
				return this._user_email;
			}
			set
			{
				if ((this._user_email != value))
				{
					this.Onuser_emailChanging(value);
					this.SendPropertyChanging();
					this._user_email = value;
					this.SendPropertyChanged("user_email");
					this.Onuser_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_type", DbType="NVarChar(20)")]
		public string user_type
		{
			get
			{
				return this._user_type;
			}
			set
			{
				if ((this._user_type != value))
				{
					this.Onuser_typeChanging(value);
					this.SendPropertyChanging();
					this._user_type = value;
					this.SendPropertyChanged("user_type");
					this.Onuser_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Change_History", Storage="_Change_Histories", ThisKey="ID_user", OtherKey="ChangeByUserID")]
		public EntitySet<Change_History> Change_Histories
		{
			get
			{
				return this._Change_Histories;
			}
			set
			{
				this._Change_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_message", Storage="_chat_messages", ThisKey="ID_user", OtherKey="SenderID")]
		public EntitySet<chat_message> chat_messages
		{
			get
			{
				return this._chat_messages;
			}
			set
			{
				this._chat_messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_session", Storage="_chat_sessions", ThisKey="ID_user", OtherKey="SupportID")]
		public EntitySet<chat_session> chat_sessions
		{
			get
			{
				return this._chat_sessions;
			}
			set
			{
				this._chat_sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_chat_session1", Storage="_chat_sessions1", ThisKey="ID_user", OtherKey="ID_user")]
		public EntitySet<chat_session> chat_sessions1
		{
			get
			{
				return this._chat_sessions1;
			}
			set
			{
				this._chat_sessions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="ID_user", OtherKey="ID_user")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_product_import", Storage="_product_imports", ThisKey="ID_user", OtherKey="ID_user")]
		public EntitySet<product_import> product_imports
		{
			get
			{
				return this._product_imports;
			}
			set
			{
				this._product_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_shopping_cart", Storage="_shopping_carts", ThisKey="ID_user", OtherKey="ID_user")]
		public EntitySet<shopping_cart> shopping_carts
		{
			get
			{
				return this._shopping_carts;
			}
			set
			{
				this._shopping_carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_detail", Storage="_User_detail", ThisKey="ID_user", OtherKey="ID_user", IsUnique=true, IsForeignKey=false)]
		public User_detail User_detail
		{
			get
			{
				return this._User_detail.Entity;
			}
			set
			{
				User_detail previousValue = this._User_detail.Entity;
				if (((previousValue != value) 
							|| (this._User_detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_detail.Entity = null;
						previousValue.User = null;
					}
					this._User_detail.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("User_detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Change_Histories(Change_History entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Change_Histories(Change_History entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_chat_messages(chat_message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_chat_messages(chat_message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_chat_sessions(chat_session entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_chat_sessions(chat_session entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_chat_sessions1(chat_session entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_chat_sessions1(chat_session entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_product_imports(product_import entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_shopping_carts(shopping_cart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_shopping_carts(shopping_cart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
